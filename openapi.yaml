openapi: 3.0.1
info:
  title: BFF - Portal Segurado Vida
  description: >-
    Esta API é responsável por disponibilizar endpoints para serem utilizados
    pelo webapp da Area logada de vida Individual (Portal Segurado Vida).
  version: 1.0.1
servers:
  - url: >-
      https://bff-user-area-lifeinsurance-develop.services.sulamerica.com.br/api/v1
tags:
  - name: BFF Portal Segurado Vida
    description: Backend for Frontend para ser utilizado pelas páginas web
  - name: ms-auth-lifeinsurance
    description: >-
      Backend responsavel por conversar diretamente com o a parte de autorização
      do KeyCloak
paths:
  /usuarios:
    get:
      tags:
        - BFF Portal Segurado Vida
      summary: Retorna dados de usuários cadastrados no Keycloak
      description: >-
        Retorna dados de usuários cadastrados no Keycloak
      operationId: getUsuarios
      parameters:
        - name: Recaptcha-Token
          in: header
          required: true
          schema:
            type: string
        - name: cpf
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
  /usuarios/consentimento:
    get:
      tags:
        - BFF Portal Segurado Vida
      summary: Compartilhamento de dados com o corretor
      description: >-
        Devido a nova regulamentação da Lei Geral de Proteção de Dados é obrigatório que todos os clientes
        possam ter a opção de compartilhar ou não seus dados com o corretor nomeado em seu seguro
      operationId: getUserConsent
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserConsent'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
    post:
      tags:
        - BFF Portal Segurado Vida
      summary: Compartilhamento de dados com o corretor
      description: >-
        Devido a nova regulamentação da Lei Geral de Proteção de Dados é obrigatório que todos os clientes
        possam ter a opção de compartilhar ou não seus dados com o corretor nomeado em seu seguro
      operationId: postUserConsent
      requestBody:
        description: A flag de consentimento e o nome completo do usuário
        content:
          application/json:
            schema:
              properties:
                consent_flag:
                  type: string
                  example: '14954782970'
                  description: Flag para habilitar consentimento do usuário, true é para ligar e false desligar
                user_fullname:
                  type: string
                  example: Nome Comprido da Silva
                  description: Nome completo do usuário
                user_code:
                  type: number
                  example: 12345
                  description: Código de identificação única de um usuário
        required: true
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
  /usuarios/emails:
    get:
      tags:
        - BFF Portal Segurado Vida
      summary: Busca os melhores emails do usuário no MDM de usuários
      description: >-
        Essa API é capaz de ir até o MDM de usuários e trazer os melhores emails
        baseado em um CPF do cliente
      operationId: retrieveEmail
      parameters:
        - name: Recaptcha-Token
          in: header
          required: true
          schema:
            type: string
        - name: cpf
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Emails'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
  /usuarios/emails/confirmacao:
    post:
      tags:
        - BFF Portal Segurado Vida
      summary: Confirma o email escolhido pelo usuário
      description: >-
        Esta api fica responsavel por confirmar qual email o usuário escolheu na
        tela para utilizar durante a comunicação da aplicação
      operationId: createEmails
      parameters:
        - name: Recaptcha-Token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        description: Um objeto com o cpf do usuario e com o id de email que ele escolheu
        content:
          '*/*':
            schema:
              type: object
              properties:
                cpf:
                  type: string
                  example: '14954782970'
                id_email:
                  type: string
                  example: 4939ae6f-b58f-44f3-8295-8b70677f3c84
        required: true
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
      x-codegen-request-body-name: body
  /usuarios/senhas:
    put:
      tags:
        - BFF Portal Segurado Vida
      summary: 'Seleciona a senha que o ususario irá utilizar no Portal '
      description: >-
        Esta Api é utilizada para escolher a senha que o usuário vai utilizar na
        aplicação
      operationId: changePassword
      parameters:
        - name: x-authorization
          in: header
          description: >-
            Esse parâmetro é um Bearer Token que foi enviado por email para o
            usuário ser capaz de validar o email.
          required: true
          schema:
            type: string
        - name: Recaptcha-Token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                senha:
                  type: string
                  example: Senhas123-5653
                senha_confirma:
                  type: string
                  example: Senhas123-5653
                termo_aceite:
                  type: boolean
                  example: true
        required: true
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
      x-codegen-request-body-name: body
    patch:
      tags:
        - BFF Portal Segurado Vida
      summary: 'Seleciona a senha que o usuario irá utilizar no Portal '
      description: >-
        Esta Api é utilizada para escolher a senha que o usuário vai utilizar na
        aplicação, geralmente chamada após ter esquecido a senha
      operationId: updatePassword
      parameters:
        - name: x-authorization
          in: header
          description: >-
            Esse parâmetro é um Bearer Token que foi enviado por email para o
            usuário ser capaz de validar o email.
          required: true
          schema:
            type: string
        - name: Recaptcha-Token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                senha:
                  type: string
                  example: Senhas123-5653
                senha_confirma:
                  type: string
                  example: Senhas123-5653
        required: true
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
      x-codegen-request-body-name: body
  /usuarios/senhas/redefinicao/:
    post:
      tags:
        - BFF Portal Segurado Vida
      summary: >-
        Utilizado em caso o Usuario esqueça a senha dele e precisa refazer o
        processo de cadastro de senha
      description: >-
        Esta Api é se iniciar o processo de esquecimento de senha, via CPF ou
        email
      operationId: passwordreset
      parameters:
        - name: Recaptcha-Token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          '*/*':
            schema:
              type: object
              properties:
                cpf:
                  type: string
                  example: 295.970.880-61
                email:
                  type: string
                  example: teste@teste.com
        required: true
      responses:
        '200':
          description: >-
            Email retornado de forma mascara a fim de não comprometer a
            segurança do usuario
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Nenhum usuario com esse cpf ou email
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
      x-codegen-request-body-name: body
  /usuarios-apolices:
    get:
      tags:
        - BFF Portal Segurado Vida
      summary: >-
        Endpoint que traz dados básicos de apolice e do usuário para ser
        utilizado na Home do Portal
      description: >-
        Endpoint que traz dados básicos de apolice e do usuário para ser
        utilizado na Home do Portal. Para mais detalhes é necessário consultar a
        API que recebe o id-contrato do ususario
      operationId: retrieveUserDaa
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DadosUsuario'
        '400':
          description: Unauthorized
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
      security:
        - arealogada_auth:
            - write:login
  /usuarios-apolices/{id-contrato}:
    get:
      tags:
        - BFF Portal Segurado Vida
      summary: >-
        Endpoint que traz dados da apolice detalhado, como coberturas, valores,
        beneficiarios
      description: >-
        Endpoint geralmente chamado para buscar mais detalhes de um apolice
        especifica. Utilizado quando o usuario clica em uma apolice
      operationId: retriveApoliceDetails
      parameters:
        - name: id-contrato
          in: path
          description: Id do contrato da apolice em questão
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TipoApolice'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
      security:
        - areadeslogada_auth:
            - write:login
  /usuarios-apolices/{id-contrato}/faturas:
    get:
      tags:
        - BFF Portal Segurado Vida
      summary: Fazer consulta trazendo todas as faturas ativas do contrato em questão
      description: >-
        Endpoint responsável por buscar as faturas daquele contrato, retirando
        sempre as canceladas
      operationId: requestAllInvoiceStatus
      parameters:
        - name: id-contrato
          in: path
          description: Id do contrato da apolice em questão
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Faturas'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
      security:
        - arealogada_auth:
            - write:login
  /usuarios-apolices/{id-contrato}/apolice:
    get:
      tags:
        - BFF Portal Segurado Vida
      summary: Fazer download da apolice para o ususario
      description: Endpoint responsável por fazer o download da apolice em PDF do usuario
      operationId: requestPolicyPDF
      parameters:
        - name: id-contrato
          in: path
          description: Id do contrato da apolice em questão
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
      security:
        - arealogada_auth:
            - write:login
  /usuarios-apolices/{id-contrato}/proposta:
    get:
      tags:
        - BFF Portal Segurado Vida
      summary: Fazer download da apolice para o ususario
      description: Endpoint responsável por fazer o download da apolice em PDF do usuario
      operationId: requestProposalPDF
      parameters:
        - name: id-contrato
          in: path
          description: Id do contrato da apolice em questão
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
      security:
        - arealogada_auth:
            - write:login
  /usuarios-apolices/{id-contrato}/faturas/{id-fatura}/boleto:
    get:
      tags:
        - BFF Portal Segurado Vida
      summary: Recuperar códigod o boleto baseado na fatura
      description: Endpoint responsável por fazer o código do boleto da fatura
      operationId: requestBankSlip
      parameters:
        - name: id-contrato
          in: path
          description: Id do contrato da apolice em questão
          required: true
          schema:
            type: integer
            format: int64
        - name: id-fatura
          in: path
          description: Id da fatura da apolice em questão
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Código do boleto da fatura
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
      security:
        - arealogada_auth:
            - write:login
  /usuarios-apolices/{id-contrato}/endosso:
    patch:
      tags:
        - BFF Portal Segurado Vida
      summary: Criar endossos no contrato
      description: >
        Endpoint responsável por atualizar informações no contrato informado
        através de um endosso. Atualmente, os endossos suportados são:
          - tipo_endosso:
            - DIA_VENCIMENTO
            - CARTAO_CREDITO
            - DEBITO_CONTA
      operationId: createEndorsement
      security:
        - Authorization: []
      parameters:
        - name: id-contrato
          in: path
          description: Id do contrato da apolice em questão
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/EndossoDiaVencimento'
                - $ref: '#/components/schemas/EndossoCartaoCredito'
                - $ref: '#/components/schemas/EndossoDebitoConta'
        required: true
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
  /usuarios-apolices/{id-contrato}/simulacoes:
    post:
      tags:
        - BFF Portal Segurado Vida
      summary: Simula um endosso no contrato
      description: |
        Endpoint responsável por criar simulações de endossos no contrato
      operationId: createEndorsementSimulation
      security:
        - Authorization: []
      parameters:
        - name: id-contrato
          in: path
          description: Id do contrato da apolice em questão
          required: true
          schema:
            type: integer
            format: int64
            example: 654978
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tipo_endosso:
                  type: string
                  example: METODO_PAGAMENTO
                meio_pagamento:
                  type: string
                  example: CAR
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndorsementSimulation'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndorsementSimulationError'
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
  /usuarios/apolices/{id-contrato}/faturas/{id-fatura}/pix:
    get:
      tags:
        - BFF Portal Segurado Vida
      summary: Retorna dados de uma fatura Pix
      description: >
        Endpoint responsável por retornar dados de uma fatura Pix, como o código
        e a url da imagem do QR Code
      operationId: getPix
      security:
        - Authorization: []
      parameters:
        - name: id-contrato
          in: path
          description: Id do contrato da apolice em questão
          required: true
          schema:
            type: integer
            format: int64
            example: 123456
        - name: id-fatura
          in: path
          description: Id da fatura pertencente à apólice em questão
          required: true
          schema:
            type: integer
            format: int64
            example: 123456
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixInvoice'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
  /usuarios/apolices/{id-contrato}/beneficios/url:
    get:
      tags:
        - BFF Portal Segurado Vida
      summary: Retorna a url do guia de benefícios da apólice
      description: |
        Endpoint responsável por retornar a url do guia de benefícios do produto
      operationId: getBenefitsGuideUrl
      security:
        - Authorization: []
      parameters:
        - name: id-contrato
          in: path
          description: Id do contrato da apolice em questão
          required: true
          schema:
            type: integer
            format: int64
            example: 123456
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: www.beneficios.com/guia.pdf
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
  /usuarios/envia-token:
    post:
      tags:
        - BFF Portal Segurado Vida
      summary: Envia um token de verificação ao usuário
      description: |
        Endpoint responsável por enviar um token de verificação para o e-mail do usuário
      operationId: postSendTokenToUser
      security:
        - Authorization: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendTokenResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
  /usuarios/valida-token:
    post:
      tags:
        - BFF Portal Segurado Vida
      summary: Valida o token que o usuário recebeu
      description: |
        Endpoint responsável validar o token que o usuário recebeu por e-mail
      operationId: postValidateUserToken
      security:
        - Authorization: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateTokenRequest'
      responses:
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
  /usuarios-apolices/{id-contrato}/produtos/url:
    get:
      tags:
        - BFF Portal Segurado Vida
      summary: Retorna a url do guia do produto da apólice
      description: |
        Endpoint responsável por retornar a url do guia do produto da apólice
      operationId: getProductGuideUrl
      security:
        - Authorization: []
      parameters:
        - name: id-contrato
          in: path
          description: Id do contrato da apolice em questão
          required: true
          schema:
            type: integer
            format: int64
            example: 123456
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: www.beneficios.com/guia.pdf
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
  /ceps/{cep}/endereco:
    get:
      tags:
        - BFF Portal Segurado Vida
      summary: Retorna o endereço referente ao cep
      description: |
        Endpoint responsável por retornar o endereço referente ao cep em questão
      operationId: getZipCodeAddress
      security:
        - Authorization: []
      parameters:
        - name: cep
          in: path
          description: CEP do endereço
          required: true
          schema:
            type: integer
            format: int64
            example: 123456
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout         
  /usuarios-apolices/{id-contrato}/cotacoes:
    post:
      tags:
        - BFF Portal Segurado Vida
      summary: Criar cotação para o contrato
      description: >
        Endpoint responsável por realizar cotações no contrato. Atualmente, as cotações suportadas são:
          - tipo_endosso:
            - ATUALIZACAO_CAPITAL
      operationId: postEndorsementQuotation
      security:
        - Authorization: []
      parameters:
        - name: id-contrato
          in: path
          description: Id do contrato da apolice em questão
          required: true
          schema:
            type: integer
            format: int64
            example: 654713
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/EndossoAtualizacaoCapital'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CotacaoEndossoAtualizacaoCapitalResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
  /produtos/{id-produto}/coberturas:
    get:
      tags:
        - BFF Portal Segurado Vida
      summary: Retorna as coberturas de um produto
      description: |
        Endpoint responsável por retornar as coberturas de um produto
      operationId: getProductCoverages
      security:
        - Authorization: []
      parameters:
        - name: id-produto
          in: path
          description: Id do produto
          required: true
          schema:
            type: integer
            example: 123416547
        - name: codigo-profissao
          in: header
          description: Código da profissão
          required: true
          schema:
            type: integer
            example: 111
        - name: data-nascimento
          in: header
          description: Data de nascimento
          required: true
          schema:
            type: string
            example: 1980-05-15
        - name: id-plano
          in: query
          description: Id do plano
          required: true
          schema:
            type: integer
            example: 32147454
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CoberturaProdutoResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
  /realms/{realm}/protocol/openid-connect/token:
    post:
      tags:
        - ms-auth-lifeinsurance
      summary: Fazer login no realm do portal de segurado vida
      operationId: Login into keycloak for loggin area
      parameters:
        - name: realm
          in: path
          required: true
          schema:
            type: string
        - name: Recaptcha-Token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - clientId
                - clientSecret
                - grantType
                - password
                - username
              properties:
                clientId:
                  type: string
                username:
                  type: string
                password:
                  type: string
                grantType:
                  type: string
                clientSecret:
                  type: string
        required: true
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccessToken'
        '400':
          description: Invalid status value  
  /usuarios/propostas/{id-contrato}:
    get:
      tags:
        - BFF Portal Segurado Vida
      summary: >-
        Endpoint que traz dados da proposta detalhado
      description: >-
        Endpoint geralmente chamado para buscar mais detalhes de uma proposta
        especifica. Utilizado quando o usuario clica em uma proposta
      operationId: retriveProposalDetails
      parameters:
        - name: id
          in: path
          description: Id do contrato
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TipoProposta'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
        '502':
          description: Bad Gateway
        '503':
          description: Service Unavailable
        '504':
          description: Gateway Timeout
      security:
        - areadeslogada_auth:
            - write:login
components:
  schemas:
    AccessToken:
      type: object
      properties:
        access_token:
          type: string
          example: ''
        expires_in:
          type: number
          example: 0
        refresh_expires_in:
          type: number
          example: 0
        refresh_token:
          type: string
          example: ''
        token_type:
          type: string
          example: ''
        not-before-policy:
          type: number
          example: 0
        session_state:
          type: string
          example: ''
        scope:
          type: string
          example: profile email
    User:
      type: object
      properties:
        id:
          type: string
          example: '34e4c9ee-8cca-43fc-b540-4601180b10ea'
        cpf:
          type: string
          example: '05***9***51'
        nome:
          type: string
          example: 'te****do@te***.com.br'
    Apolices:
      type: array
      items:
        $ref: '#/components/schemas/Apolice'
    Apolice:
      type: object
      properties:
        id:
          type: integer
          example: 243424
        numero:
          type: integer
          example: 123123123
        nome:
          type: string
          example: '32057825779'
        vigencia:
          type: object
          properties:
            inicio:
              type: string
              example: '2021-12-31T00:00:00.000Z'
            fim:
              type: string
              example: '2021-12-31T00:00:00.000Z'
        situacao_pagamento:
          type: string
          example: PAGA
    Usuario:
      type: object
      properties:
        cpf:
          type: string
          example: '32057825779'
        nome:
          type: string
          example: João da Silva
    UserConsent:
      type: object
      properties: 
        consent_flag:
          type: boolean
          example: true
        user_code:
          type: number
          example: 12345
    DadosUsuario:
      type: object
      properties:
        apolices:
          $ref: '#/components/schemas/Apolices'
        usuario:
          $ref: '#/components/schemas/Usuario'
    Faturas:
      type: array
      items:
        type: object
        properties:
          inicio_vigencia:
            type: string
            example: '2008-04-09T00:00:00.000Z'
          numero_parcela:
            type: number
            example: 2
          numero_fatura:
            type: number
            example: 1
          tipo_cobranca:
            type: string
            example: Ficha de compensação
          data_vencimento:
            type: string
            example: '2008-04-09T00:00:00.000Z'
          valor_cobrado:
            type: number
            example: 13300
          situacao:
            type: string
            example: Paga
    TipoApolice:
      type: object
      properties:
        apolice:
          $ref: '#/components/schemas/DetalhesApolice'
    TipoProposta:
      type: object
      properties:
        proposta:
          $ref: '#/components/schemas/DetalhesProposta'
    DetalhesProposta:
      type: object
      properties:
        id:
          type: integer
          example: 5412655054
        numero_proposta:
          type: integer
          example: 700045498
        descricao_produto:
          type: string
          example: 'SULAMERICA VIDA INDIVIDUAL'
        situacao_pagamento:
          type: string
          example: 'Aberto'
        status:
          type: string
          example: 'Em digitação'
        funcoes: 
          type: array
          items:
            type: string
            example: ["PROPOSTA", "PAGAMENTO"]
        data_criacao: 
          type: string
          example: '2019-01-15T00:00:00.000Z'
        data_inclusao: 
          type: string
          example: '2019-01-23T00:00:00.000Z'
        codigo_meio_pagamento:
          type: string
          example: 'DCC'
        fatura: 
          type: object
          properties:
            startDate: 
              type: string
              example: null
            endDate:
              type: string
              example: null
            id:
              type: integer
              example: 5411975359
            installmentNumber:
              type: integer
              example: 1
            invoiceNumber:
              type: integer
              example: 1
            ourNumber:
              type: string
              example: '0000001009249743'
            chargedType:
              type: string
              example: 'Boleto avulso'
            chargedTypeCode:
              type: string
              example: 'FCA'
            generatedDate:
              type: string
              example: '2019-01-15T00:00:00.000Z'
            dueDate:
              type: string
              example: '2019-01-15T00:00:00.000Z'
            issuedAmount:
              type: string
              example: '2019-01-15T00:00:00.000Z'
            status:
              type: string
              example: 'Em trânsito'
        corretores:
          type: array
          items:
            type: object
            properties:
              nome:
                type: string
                example: 'NEW CORRETORES'
              telefone:
                type: string
                example: '3132015670'
              email:
                type: string
                example: 'emailpadrao@portalcorretor.com'
              lider:
                type: boolean
                example: true
    DetalhesApolice:
      type: object
      properties:
        numero_apolice:
          type: integer
          example: 476128796
        data_inclusao:
          type: string
          example: '2021-12-31T00:00:00.000Z'
        data_inicio:
          type: string
          example: '2021-12-31T00:00:00.000Z'
        data_fim:
          type: string
          example: '2021-12-31T00:00:00.000Z'
        situacao_pagamento:
          type: string
          example: PAGA
        herdeiros_legais:
          type: boolean
          example: false
        coberturas:
          type: array
          items:
            type: object
            properties:
              descricao:
                type: string
                example: Nome da  cobertura
              valor_capital_contratado:
                type: number
                example: 123123
        beneficiarios:
          type: array
          items:
            type: object
            properties:
              nome:
                type: string
                example: Joao
              percentual_participacao:
                type: number
                example: 20.1
        valor:
          type: object
          properties:
            parcela:
              type: number
              example: 45.9
            periodicidade:
              type: string
              example: MENSAL
            meio_pagamento:
              type: string
              example: BOLETO
        assistencias:
          type: array
          items:
            type: object
            properties:
              descricao:
                type: string
                example: Cartão cesta básica
        produto:
          type: object
          properties:
            descricao:
              type: string
              example: VIDA INDIVIDUAL
    Emails:
      type: array
      items:
        type: object
        properties:
          email:
            type: string
            example: e**l@sul******.***.br
          id:
            type: string
            example: 4939ae6f-b58f-44f3-8295-8b70677f3c84
    EndossoDiaVencimento:
      type: object
      properties:
        tipo_endosso:
          type: string
          example: DIA_VENCIMENTO
        dia_vencimento:
          maximum: 31
          minimum: 1
          type: integer
          example: 15
    EndossoCartaoCredito:
      type: object
      properties:
        tipo_endosso:
          type: string
          example: CARTAO_CREDITO
        dados_cartao_credito:
          $ref: '#/components/schemas/DadosCartaoCredito'
    DadosCartaoCredito:
      type: object
      properties:
        cpf_pagador:
          type: string
          example: sd65f4s56df4
        nome_impresso:
          type: string
          example: sd65f4s56df4
        bandeira:
          type: string
          example: sd65f4s56df4
        numero_cartao:
          type: string
          example: sd54fs65fd4
        validade_cartao:
          type: string
          example: sd65f4s56df4
    EndossoDebitoConta:
      type: object
      properties:
        tipo_endosso:
          type: string
          example: DEBITO_CONTA
        dados_bancarios:
          $ref: '#/components/schemas/DadosContaBancaria'
    DadosContaBancaria:
      type: object
      properties:
        banco:
          type: string
          example: 123
        agencia:
          type: string
          example: 123
        conta_corrente:
          type: string
          example: 1234
        dv_conta_corrente:
          type: string
          example: 1
    EndossoAtualizacaoCapital:
      type: object
      properties:
        tipo_endosso:
          type: string
          example: ATUALIZACAO_CAPITAL
        atualizacao_capital:
          type: array
          items:
            $ref: '#/components/schemas/DadosAtualizacaoCapital'
    DadosAtualizacaoCapital:
      type: object
      properties:
        id_cobertura_contratada:
          type: integer
          example: 13468547
        valor_capital:
          type: number
          example: 15000.99
    CotacaoEndossoAtualizacaoCapitalResponse:
      type: object
      properties:
        data_inicio_vigencia_endosso:
          type: string
          example: '2020-01-01T00:00:00.000Z'
        valor:
          type: number
          example: 1500.99
        coberturas:
          type: array
          items:
            type: object
            properties:
              id_cobertura_contratada:
                type: integer
                example: 13468547
              valor_capital:
                type: number
                example: 15000.99
              valor:
                type: number
                example: 15.85
    EndorsementSimulation:
      type: object
      properties:
        numero_parcela:
          type: number
          example: 123
        numero_parcela_contabil:
          type: number
          example: 123
        numero_fatura:
          type: number
          example: 1234
        numero_endosso_contabil:
          type: number
          example: 1
        data_vencimento:
          type: string
          example: '2020-01-01T00:00:00.000Z'
        tipo_cobranca:
          type: number
          example: CAR
        descricao_cobranca:
          type: number
          example: Cartão de crédito
        valor:
          type: number
          example: 100
    EndorsementSimulationError:
      type: object
      properties:
        codigo:
          type: string
          example: NUMERO_ENDOSSO_EXCEDIDO
    PixInvoice:
      type: object
      properties:
        numero_parcela:
          type: number
          example: 1
        valor:
          type: number
          example: 29.99
        data_vencimento:
          type: string
          example: '2021-12-31T00:00:00.000Z'
        qr_code:
          type: string
          example: qr_code_copia_e_cola
        url_imagem_qr_code:
          type: string
          example: www.site.com.br/qrCode.png
    SendTokenResponse:
      type: object
      properties:
        id:
          type: string
          example: 'sdf54s6g46465'
        email:
          type: string
          example: 'm**l@ma**.com'
    ValidateTokenRequest:
      type: object
      properties:
        id:
          type: string
          example: 'sdf54s6g46465'
        token:
          type: string
          example: '1234'
    AddressResponse:
      type: object
      properties:
        cep:
          type: string
          example: '87000000'
        uf:
          type: string
          example: 'PR'
        municipio:
          type: string
          example: 'Maringá'
        bairro:
          type: string
          example: 'Centro'
        logradouro:
          type: string
          example: 'Avenida Brasil'
    CoberturaProdutoResponse:
      type: object
      properties:
        id_cobertura:
          type: integer
          example: 122354787
        valor_minimo_capital:
          type: number
          example: 10000.99
        valor_maximo_capital:
          type: number
          example: 500000.59
    Error:
      type: object
      properties:
        status:
          type: number
          example: <http status number>
        code:
          type: string
          example: SOME_ERROR
        type:
          type: string
          example: Error
        message:
          type: string
          example: Some error
        reason:
          type: string
          example: Something went wrong
  securitySchemes:
    arealogada_auth:
      type: oauth2
      flows:
        password:
          tokenUrl: >-
            https://ms-auth-area-lifeinsurance-develop.services.sulamerica.com.br/realms/segurado_vida/protocol/openid-connect/token
          scopes:
            write:login: Visualizar e logar na aplicação de Vida Individual
    areadeslogada_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: >-
            https://bff-user-area-lifeinsurance-master.services.sulamerica.com.br/access-token
          scopes:
            write:login: Visualizar e logar na aplicação de Vida Individual
    Authorization:
      type: http
      scheme: bearer